plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
//    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.jeckonly.pokemons"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}


dependencies {
    // modules
    implementation(project(":core-data"))

    implementation "androidx.core:core-ktx:$core_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    implementation "androidx.activity:activity-compose:$activity_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    // implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$acompanist_version"
    // To use constraintlayout in compose
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // 官方导航库
    implementation "androidx.navigation:navigation-compose:2.5.2"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$androidx_hilt_version"

    // coil
    implementation "io.coil-kt:coil-compose:2.1.0"
    // palette
    implementation "androidx.palette:palette-ktx:1.0.0"

    // splash screen兼容
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // work with WorkManager
    implementation "androidx.hilt:hilt-work:$androidx_hilt_version"
    // When using Kotlin.
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt_version"

    // WorkManager: Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // compose view pager
    implementation "com.google.accompanist:accompanist-pager:$acompanist_version"
    // If using indicators, also depend on
    implementation "com.google.accompanist:accompanist-pager-indicators:$acompanist_version"

    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
}